# Generated by Django 5.2.1 on 2025-07-24 06:46

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Name Category"
                    ),
                ),
                (
                    "description",
                    models.TextField(max_length=1000, verbose_name="Description"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="category_pictures/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"parent__isnull": True},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="children",
                        to="product.category",
                        verbose_name="Parent Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=255, unique=True, verbose_name="Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(max_length=1000, verbose_name="Description"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=20,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Price",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="products/",
                        verbose_name="Product Image",
                    ),
                ),
                (
                    "overall_rating",
                    models.FloatField(
                        default=0.0, editable=False, verbose_name="Overall Rating"
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(default=True, verbose_name="Is Available"),
                ),
                (
                    "discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Discount percentage (0-100)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Discount",
                    ),
                ),
                (
                    "trending",
                    models.BooleanField(
                        default=False,
                        help_text="Is this product trending?",
                        verbose_name="Trending",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="product.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
            },
        ),
        migrations.CreateModel(
            name="ProductColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("#f5f5dc", "Beige"),
                            ("#000", "Black"),
                            ("#00f", "Blue"),
                            ("#a52a2a", "Brown"),
                            ("#ff7f50", "Coral"),
                            ("#00ffff", "Cyan"),
                            ("#ffd700", "Gold"),
                            ("#808080", "Gray"),
                            ("#0f0", "Green"),
                            ("#4b0082", "Indigo"),
                            ("#e6e6fa", "Lavender"),
                            ("#00ff00", "Lime"),
                            ("#ff00ff", "Magenta"),
                            ("#800000", "Maroon"),
                            ("#98ff98", "Mint"),
                            ("#000080", "Navy"),
                            ("#808000", "Olive"),
                            ("#ffa500", "Orange"),
                            ("#ffc0cb", "Pink"),
                            ("#800080", "Purple"),
                            ("#f00", "Red"),
                            ("#fa8072", "Salmon"),
                            ("#c0c0c0", "Silver"),
                            ("#008080", "Teal"),
                            ("#40e0d0", "Turquoise"),
                            ("#ee82ee", "Violet"),
                            ("#fff", "White"),
                            ("#ff0", "Yellow"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="products/colors/None/"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="colors",
                        to="product.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="product_images/")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_images",
                        to="product.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="product_tag_name_bf4b57_idx")
                ],
            },
        ),
        migrations.AddField(
            model_name="product",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                related_name="products",
                to="product.tag",
                verbose_name="Tags",
            ),
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content",
                    models.CharField(
                        help_text="Write your feedback here",
                        max_length=255,
                        verbose_name="Review",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        default=3,
                        verbose_name="Rating",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="product.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Review",
                "verbose_name_plural": "Reviews",
                "ordering": ["-created_at"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("product", "user"), name="unique_product_review"
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="price_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["-overall_rating"], name="rating_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["category"], name="category_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_available", "trending"], name="available_trending_idx"
            ),
        ),
    ]
